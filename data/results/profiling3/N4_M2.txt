
Removing groundhog_server_2 ... 
Removing groundhog_server_3 ... 
Removing groundhog_server_1 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_client_1 ... done
Removing groundhog_server_2 ... done
Removing groundhog_uptime_1 ... done
Removing groundhog_server_1 ... done
Removing groundhog_server_3 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  30.99MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_1 ... done
Creating groundhog_server_2 ... done
Creating groundhog_server_3 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_1, groundhog_server_2, groundhog_server_3
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m My IP is 10.0.0.4, my idx is 2
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[33mserver_1  |[0m My IP is 10.0.0.3, my idx is 1
[35mserver_3  |[0m My IP is 10.0.0.5, my idx is 3
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:14471.8   ms/enc:0.0691 	  Mbps:3.47323 Aborts = 0 Time (ms) = 6910
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:3.97363	Std Deviation:1.89644
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:7.9985e-06	Std Deviation:3.38273e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.00166e-06	Std Deviation:5.18104e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.45266e-07	Std Deviation:2.78261e-06
[35mgroundhog_server_3 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0m[32mgroundhog_server_2 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_3 ... 
Removing groundhog_server_2 ... 
Removing groundhog_server_1 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_server_2 ... done
Removing groundhog_uptime_1 ... done
Removing groundhog_server_3 ... done
Removing groundhog_server_1 ... done
Removing groundhog_client_1 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon     31MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_2 ... done
Creating groundhog_server_3 ... done
Creating groundhog_server_1 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_2, groundhog_server_3, groundhog_server_1
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.5, my idx is 3
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m My IP is 10.0.0.3, my idx is 1
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[35mserver_3  |[0m My IP is 10.0.0.4, my idx is 2
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:11800.8   ms/enc:0.08474 	  Mbps:2.83219 Aborts = 0 Time (ms) = 8474
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:4.90927	Std Deviation:2.43297
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:9.4506e-06	Std Deviation:4.36898e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.16679e-06	Std Deviation:5.4332e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.97509e-07	Std Deviation:5.81428e-06
[32mgroundhog_server_2 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Stopping groundhog_uptime_1 ... done
Removing groundhog_server_1 ... 
Removing groundhog_server_2 ... 
Removing groundhog_server_3 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_server_1 ... done
Removing groundhog_client_1 ... done
Removing groundhog_server_2 ... done
Removing groundhog_uptime_1 ... done
Removing groundhog_server_3 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon     31MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_1 ... done
Creating groundhog_server_2 ... done
Creating groundhog_server_3 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_1, groundhog_server_2, groundhog_server_3
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m My IP is 10.0.0.4, my idx is 2
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[33mserver_1  |[0m My IP is 10.0.0.3, my idx is 1
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[35mserver_3  |[0m My IP is 10.0.0.5, my idx is 3
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:14144.3   ms/enc:0.0707 	  Mbps:3.39463 Aborts = 0 Time (ms) = 7070
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:3.88576	Std Deviation:2.05602
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:8.39658e-06	Std Deviation:1.84359e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.0683e-06	Std Deviation:4.53017e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.704e-07	Std Deviation:2.60066e-06
[32mgroundhog_server_2 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Stopping groundhog_uptime_1 ... done
Removing groundhog_server_3 ... 
Removing groundhog_server_2 ... 
Removing groundhog_server_1 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_server_1 ... done
Removing groundhog_server_3 ... done
Removing groundhog_uptime_1 ... done
Removing groundhog_server_2 ... done
Removing groundhog_client_1 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.01MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_3 ... done
Creating groundhog_server_1 ... done
Creating groundhog_server_2 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_3, groundhog_server_1, groundhog_server_2
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.4, my idx is 2
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m My IP is 10.0.0.5, my idx is 3
[35mserver_3  |[0m My IP is 10.0.0.3, my idx is 1
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:14488.6   ms/enc:0.06902 	  Mbps:3.47725 Aborts = 0 Time (ms) = 6902
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:3.97486	Std Deviation:1.94905
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:7.86207e-06	Std Deviation:1.61263e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.03345e-06	Std Deviation:4.45238e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.36156e-07	Std Deviation:2.43005e-06
[33mgroundhog_server_1 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0m[32mgroundhog_server_2 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_1 ... 
Removing groundhog_server_3 ... 
Removing groundhog_server_2 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_uptime_1 ... done
Removing groundhog_client_1 ... done
Removing groundhog_server_3 ... done
Removing groundhog_server_2 ... done
Removing groundhog_server_1 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.01MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_1 ... done
Creating groundhog_server_3 ... done
Creating groundhog_server_2 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_1, groundhog_server_3, groundhog_server_2
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.3, my idx is 1
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[35mserver_3  |[0m My IP is 10.0.0.4, my idx is 2
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[32mserver_2  |[0m My IP is 10.0.0.5, my idx is 3
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:12397.7   ms/enc:0.08066 	  Mbps:2.97545 Aborts = 0 Time (ms) = 8066
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:4.52748	Std Deviation:2.31729
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:8.4492e-06	Std Deviation:2.68939e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.01118e-06	Std Deviation:5.21561e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.42505e-07	Std Deviation:3.48509e-06
[32mgroundhog_server_2 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_2 ... 
Removing groundhog_server_3 ... 
Removing groundhog_server_1 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_client_1 ... done
Removing groundhog_server_3 ... done
Removing groundhog_server_1 ... done
Removing groundhog_uptime_1 ... done
Removing groundhog_server_2 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.02MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_2 ... done
Creating groundhog_server_3 ... done
Creating groundhog_server_1 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_2, groundhog_server_3, groundhog_server_1
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.4, my idx is 2
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[32mserver_2  |[0m My IP is 10.0.0.3, my idx is 1
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[35mserver_3  |[0m My IP is 10.0.0.5, my idx is 3
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:12115.3   ms/enc:0.08254 	  Mbps:2.90768 Aborts = 0 Time (ms) = 8254
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:4.77151	Std Deviation:2.29227
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:9.06666e-06	Std Deviation:4.64891e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.12218e-06	Std Deviation:1.02134e-05
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.39355e-07	Std Deviation:3.49713e-06
[32mgroundhog_server_2 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_3 ... 
Removing groundhog_server_1 ... 
Removing groundhog_server_2 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_server_1 ... done
Removing groundhog_client_1 ... done
Removing groundhog_server_3 ... done
Removing groundhog_server_2 ... done
Removing groundhog_uptime_1 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.03MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_1 ... done
Creating groundhog_server_3 ... done
Creating groundhog_server_2 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_1, groundhog_server_3, groundhog_server_2
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.3, my idx is 1
[32mserver_2  |[0m My IP is 10.0.0.5, my idx is 3
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m My IP is 10.0.0.4, my idx is 2
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:14421.7   ms/enc:0.06934 	  Mbps:3.46121 Aborts = 0 Time (ms) = 6934
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:3.80533	Std Deviation:1.92516
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:7.88044e-06	Std Deviation:2.0012e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:9.69788e-07	Std Deviation:4.4868e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.14807e-07	Std Deviation:2.25487e-06
[32mgroundhog_server_2 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_2 ... 
Removing groundhog_server_3 ... 
Removing groundhog_server_1 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_uptime_1 ... done
Removing groundhog_server_1 ... done
Removing groundhog_client_1 ... done
Removing groundhog_server_2 ... done
Removing groundhog_server_3 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.03MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_3 ... done
Creating groundhog_server_1 ... done
Creating groundhog_server_2 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_3, groundhog_server_1, groundhog_server_2
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[33mserver_1  |[0m My IP is 10.0.0.4, my idx is 2
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m My IP is 10.0.0.5, my idx is 3
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m My IP is 10.0.0.3, my idx is 1
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:13717.4   ms/enc:0.0729 	  Mbps:3.29218 Aborts = 0 Time (ms) = 7290
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:4.14604	Std Deviation:2.04109
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:8.57307e-06	Std Deviation:2.20205e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.11224e-06	Std Deviation:4.921e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:3.78326e-07	Std Deviation:5.59224e-06
[33mgroundhog_server_1 exited with code 0
[0m[32mgroundhog_server_2 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0m[35mgroundhog_server_3 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_1 ... 
Removing groundhog_server_3 ... 
Removing groundhog_server_2 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_server_2 ... done
Removing groundhog_uptime_1 ... done
Removing groundhog_client_1 ... done
Removing groundhog_server_1 ... done
Removing groundhog_server_3 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.04MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_2 ... done
Creating groundhog_server_1 ... done
Creating groundhog_server_3 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_2, groundhog_server_1, groundhog_server_3
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m My IP is 10.0.0.3, my idx is 1
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[35mserver_3  |[0m My IP is 10.0.0.5, my idx is 3
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.4, my idx is 2
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:13125.1   ms/enc:0.07619 	  Mbps:3.15002 Aborts = 0 Time (ms) = 7619
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:4.20493	Std Deviation:2.03689
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:8.35918e-06	Std Deviation:4.199e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:9.75698e-07	Std Deviation:5.449e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:2.96357e-07	Std Deviation:2.34776e-06
[33mserver_1  |[0m network send error: Connection reset by peer
[33mserver_1  |[0m  at  /usr/local/src/cryptoTools/cryptoTools/Network/Channel.cpp:871
[35mgroundhog_server_3 exited with code 0
[0m[32mgroundhog_server_2 exited with code 0
[0m[33mgroundhog_server_1 exited with code 139
[0m[36mgroundhog_client_1 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
Removing groundhog_server_3 ... 
Removing groundhog_server_1 ... 
Removing groundhog_server_2 ... 
Removing groundhog_client_1 ... 
Removing groundhog_uptime_1 ... 
Removing groundhog_uptime_1 ... done
Removing groundhog_server_3 ... done
Removing groundhog_server_2 ... done
Removing groundhog_client_1 ... done
Removing groundhog_server_1 ... done
Removing network groundhog_dise-net
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  31.04MB
Step 1/13 : FROM alpine:3.15
 ---> 32b91e3161c8
Step 2/13 : WORKDIR /usr/local/src
 ---> Using cache
 ---> 5d60584c7077
Step 3/13 : COPY ./cryptoTools ./cryptoTools
 ---> Using cache
 ---> 097cf5c44dee
Step 4/13 : RUN apk add git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev  && cd cryptoTools  && rm -f cryptoTools/Common/config.h  && python3 build.py --setup --relic -DFETCH_BOOST=OFF  && python3 build.py -DENABLE_RELIC=ON  && python3 build.py --install  && cd ..  && rm -rf cryptoTools  && apk del git gcc g++ make cmake bash openssl-dev boost1.77-static boost1.77-dev
 ---> Using cache
 ---> f449807f8e39
Step 5/13 : RUN apk add git gcc g++ make cmake libstdc++ openssl-dev boost1.77-static boost1.77-dev python3 linux-tools
 ---> Using cache
 ---> 26fdf03df6ef
Step 6/13 : RUN echo initial git build  && git clone "https://github.com/synercys/htdise" repo  && mv repo/DiSE .  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc` || echo "GitHub build failed! Continuing..."
 ---> Using cache
 ---> de135c817573
Step 7/13 : COPY ./DiSE ./DiSE
 ---> Using cache
 ---> 275810352985
Step 8/13 : RUN echo incremental build  && cd DiSE  && cmake . -Wno-dev  && make -j `nproc`  && cp -r bin /usr/local
 ---> Using cache
 ---> a835baf3d624
Step 9/13 : WORKDIR /usr/local
 ---> Using cache
 ---> 94888501f72f
Step 10/13 : COPY restart.py uptime_server.py /usr/local/bin/
 ---> Using cache
 ---> 5e2a6e3e0e43
Step 11/13 : COPY data/state.txt /usr/local
 ---> Using cache
 ---> 26463413267a
Step 12/13 : COPY default.json /usr/local
 ---> Using cache
 ---> 86b627202570
Step 13/13 : CMD ["/usr/local/bin/dEncFrontend", "-u"]
 ---> Using cache
 ---> 30b6333ad0f5
Successfully built 30b6333ad0f5
Successfully tagged groundhog:latest
Creating network "groundhog_dise-net" with driver "bridge"
Creating groundhog_uptime_1 ... 
Creating groundhog_uptime_1 ... done
Creating groundhog_client_1 ... 
Creating groundhog_client_1 ... done
Creating groundhog_server_1 ... 
Creating groundhog_server_2 ... 
Creating groundhog_server_3 ... 
Creating groundhog_server_2 ... done
Creating groundhog_server_1 ... done
Creating groundhog_server_3 ... done
Attaching to groundhog_uptime_1, groundhog_client_1, groundhog_server_2, groundhog_server_1, groundhog_server_3
[36mclient_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m My IP is 10.0.0.2, my idx is 0
[33mserver_1  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[33mserver_1  |[0m My IP is 10.0.0.3, my idx is 1
[36mclient_1  |[0m Key exchange done. Starting  benchmark.
[33mserver_1  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[33mserver_1  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[36mclient_1  |[0m ---- Size of Plain Text = 24 Number of Trials = 100000
[32mserver_2  |[0m Application Start /usr/local/src/DiSE/test/Helloworld.cpp 185
[32mserver_2  |[0m My IP is 10.0.0.4, my idx is 2
[35mserver_3  |[0m My IP is 10.0.0.5, my idx is 3
[32mserver_2  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[32mserver_2  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Preparation-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Send-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Receive-Times	Mean:-nan	Std Deviation:-nan
[35mserver_3  |[0m ---- OPRF-Combine-Times	Mean:-nan	Std Deviation:-nan
[36mclient_1  |[0m Net            n:4  m:2   t:100000     enc/s:12889.9   ms/enc:0.07758 	  Mbps:3.09358 Aborts = 0 Time (ms) = 7758
[36mclient_1  |[0m ---- OPRF-Preparation-Times	Mean:4.53868	Std Deviation:2.18707
[36mclient_1  |[0m ---- OPRF-Send-Times	Mean:9.5693e-06	Std Deviation:3.01802e-05
[36mclient_1  |[0m ---- OPRF-Receive-Times	Mean:1.18241e-06	Std Deviation:4.8838e-06
[36mclient_1  |[0m ---- OPRF-Combine-Times	Mean:4.11374e-07	Std Deviation:3.25596e-06
[35mgroundhog_server_3 exited with code 0
[0m[33mgroundhog_server_1 exited with code 0
[0m[36mgroundhog_client_1 exited with code 0
[0m[32mgroundhog_server_2 exited with code 0
[0mStopping groundhog_uptime_1 ... 
Stopping groundhog_uptime_1 ... done
Gracefully stopping... (press Ctrl+C again to force)
